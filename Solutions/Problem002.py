# EVEN FIBONACCI NUMBERS (002)
'''
QUESTION : Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
By considering the terms in the Fibonacci sequence whose values 
do not exceed four million, find the sum of the even-valued terms.

ANSWER : 4613732

EXPLANATION : The code iterates through Fibonacci numbers, 
identifies even numbers, and accumulates their sum until the 
Fibonacci sequence exceeds the specified limit (sum1). 
The final result is then printed along with the execution time. 
The code is designed to calculate the sum of even Fibonacci numbers 
up to a specified limit efficiently.
'''

import time
start = time.time()
def even_fibbonacci(sum1):
    i1 = 1
    i2 = 2
    i3 = 0
    summation= 0
    while i3<sum1:
        i3 = i1+i2
        if i3%2 ==0:
            summation += i3
        i1 = i2
        i2 = i3
    print(summation+2)

even_fibbonacci(4000000)
print(time.time() - start)
